<UserControl x:Class="RemoteManager.Views.Agents.AgentsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:RemoteManager.ViewModels.Agents"
             xmlns:conv="clr-namespace:RemoteManager.Converters"
             xmlns:views="clr-namespace:RemoteManager.Views.Agents"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance vm:AgentsViewModel}">
    <UserControl.Resources>
        <conv:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="0">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="0,0,0,8">
                <Grid Width="200" Margin="0,0,8,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{DynamicResource Icon.Search}" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Center" Margin="0,0,4,0" />
                    <TextBox Grid.Column="1" Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
                <StackPanel Orientation="Horizontal">
                    <ToggleButton Content="{DynamicResource Agents.Filter.All}"
                                  IsChecked="{Binding ActiveStatusFilter, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=All}"
                                  Style="{DynamicResource GhostButton}" Margin="0,0,4,0" />
                    <ToggleButton Content="{DynamicResource Agents.Filter.Online}"
                                  IsChecked="{Binding ActiveStatusFilter, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Online}"
                                  Style="{DynamicResource GhostButton}" Margin="0,0,4,0" />
                    <ToggleButton Content="{DynamicResource Agents.Filter.Offline}"
                                  IsChecked="{Binding ActiveStatusFilter, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Offline}"
                                  Style="{DynamicResource GhostButton}" Margin="0,0,4,0" />
                    <ToggleButton Content="{DynamicResource Agents.Filter.Pending}"
                                  IsChecked="{Binding ActiveStatusFilter, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Pending}"
                                  Style="{DynamicResource GhostButton}" Margin="0,0,4,0" />
                    <ToggleButton Content="{DynamicResource Agents.Filter.Quarantine}"
                                  IsChecked="{Binding ActiveStatusFilter, Mode=TwoWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Quarantine}"
                                  Style="{DynamicResource GhostButton}" />
                </StackPanel>
            </StackPanel>
            <Grid>
                <DataGrid x:Name="AgentsGrid"
                          ItemsSource="{Binding View}"
                          SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                          AutoGenerateColumns="False" SelectionMode="Single"
                          EnableRowVirtualization="True" EnableColumnVirtualization="True"
                          VirtualizingPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="{DynamicResource Agents.Header.Status}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border x:Name="badge" Style="{DynamicResource Badge.Online}">
                                        <TextBlock Text="{Binding Status}" Foreground="{DynamicResource Brush.Background}" />
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Status}" Value="Pending">
                                            <Setter TargetName="badge" Property="Style" Value="{DynamicResource Badge.Pending}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="Offline">
                                            <Setter TargetName="badge" Property="Style" Value="{DynamicResource Badge.Offline}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value="Quarantine">
                                            <Setter TargetName="badge" Property="Style" Value="{DynamicResource Badge.Quarantine}" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.Name}" Binding="{Binding Name}" />
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.Host}" Binding="{Binding Host}" />
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.Group}" Binding="{Binding Tags}" />
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.Version}" Binding="{Binding Version}" />
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.Uptime}" Binding="{Binding Uptime}" />
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.Platform}" Binding="{Binding Platform}" />
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.CpuRam}" Binding="{Binding CpuRam}" />
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.Ping}" Binding="{Binding Ping}" />
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.LastSeen}" Binding="{Binding LastSeen}" />
                        <DataGridTextColumn Header="{DynamicResource Agents.Header.Fingerprint}" Binding="{Binding Fingerprint}" />
                        <DataGridTemplateColumn Header="{DynamicResource Agents.Header.Actions}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Content="{DynamicResource Agents.Action.OpenDetails}" Command="{Binding DataContext.OpenDetailsCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" Style="{DynamicResource GhostButton}" Margin="0,0,4,0" />
                                        <Button Content="{DynamicResource Agents.Action.Trust}" Command="{Binding DataContext.TrustCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" Style="{DynamicResource GhostButton}" Margin="0,0,4,0" />
                                        <Button Content="{DynamicResource Agents.Action.Reject}" Command="{Binding DataContext.RejectCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" Style="{DynamicResource GhostButton}" Margin="0,0,4,0" />
                                        <Button Content="{DynamicResource Agents.Action.Files}" Command="{Binding DataContext.OpenFilesCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" Style="{DynamicResource GhostButton}" Margin="0,0,4,0" />
                                        <Button Content="{DynamicResource Agents.Action.Terminal}" Command="{Binding DataContext.OpenTerminalCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" Style="{DynamicResource GhostButton}" Margin="0,0,4,0" />
                                        <Button Content="{DynamicResource Agents.Action.Restart}" Command="{Binding DataContext.RestartCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}" Style="{DynamicResource GhostButton}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="{DynamicResource Agents.Action.OpenDetails}"
                                                  Command="{Binding DataContext.OpenDetailsCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                        <MenuItem Header="{DynamicResource Agents.Action.Trust}"
                                                  Command="{Binding DataContext.TrustCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                        <MenuItem Header="{DynamicResource Agents.Action.Reject}"
                                                  Command="{Binding DataContext.RejectCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                        <MenuItem Header="{DynamicResource Agents.Action.Files}"
                                                  Command="{Binding DataContext.OpenFilesCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                        <MenuItem Header="{DynamicResource Agents.Action.Terminal}"
                                                  Command="{Binding DataContext.OpenTerminalCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                        <MenuItem Header="{DynamicResource Agents.Action.Restart}"
                                                  Command="{Binding DataContext.RestartCmd, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                            Visibility="{Binding View.IsEmpty, Converter={StaticResource BoolToVis}}">
                    <TextBlock Text="{DynamicResource Agents.Empty.Message}" Margin="0,0,0,8" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="{DynamicResource Agents.Empty.ScanNetwork}" Style="{DynamicResource PrimaryButton}" Margin="0,0,8,0" />
                        <Button Content="{DynamicResource Agents.Empty.AddManual}" Style="{DynamicResource GhostButton}" />
                    </StackPanel>
                </StackPanel>
            </Grid>
        </DockPanel>
        <views:AgentDetailsDrawer Grid.Column="1" Width="420" DataContext="{Binding SelectedItem}"
                                  Visibility="{Binding IsDetailsOpen, Converter={StaticResource BoolToVis}}" />
    </Grid>
</UserControl>
